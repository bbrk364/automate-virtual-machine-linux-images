#version=RHEL8
# X Window System configuration information (only for graphical installation)
# xconfig  --startxonboot
# License agreement (only for graphical installation)
# eula --agreed

# Skip X config
skipx

# System authorization information
auth --enableshadow --passalgo=sha512

# Use CDROM installation media
cdrom

# Use text install
text

# Run the Setup Agent on first boot
firstboot --enable

# Enable more hardware support
unsupported_hardware

# System services
services --enabled="chronyd"

# Groups
group --name=adm
group --name=systemd-journal

# Keyboard layouts
keyboard --vckeymap=es-winkeys --xlayouts='es (winkeys)','us'

# System language
lang en_US.UTF-8 --addsupport=es_ES.UTF-8

# Disks
ignoredisk --only-use=sda

# Overwrite the MBR
zerombr

# Network information
network  --bootproto=dhcp --device=enp0s3 --ipv6=auto --activate
network  --hostname=centos

#Root password
rootpw --lock

# System timezone
timezone Europe/Madrid --isUtc

# Users
# Howto generate crypted passwords: python -c 'import crypt,base64,os; print(crypt.crypt("password", "$6$" + base64.b64encode(os.urandom(6))))'
# Example create user
# user --groups=wheel,adm,systemd-journal --name=myuser --password=cryptedpassword --iscrypted --gecos="myuser"
user --groups=wheel,adm --name=packer --plaintext --password=packer

# System bootloader configuration
bootloader --location=mbr --boot-drive=sda

# Partition type
autopart --type=lvm

# Partition clearing information
clearpart --none --initlabel

# Reboot the system when the install is complete
reboot --eject


# If we need to generate one image without docs
# %packages --excludedocs
%packages
@^minimal-environment
chrony
# unnecessary packages
-*-firmware
-biosdevname
-dnf-plugin-spacewalk
-dracut-network
-dracut-config-rescue
-firewalld
-firewalld-filesystem
-iprutils
-microcode_ctl
-plymouth
-plymouth-core
-plymouth-scripts
-python3-dnf-plugin-spacewalk
-python3-firewall

%end

%addon com_redhat_kdump --disable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end


%post --log=/root/ks-post.log

echo "INFO: Install DNS utils deltarpm and curl"
dnf -y install net-tools bind-utils drpm curl
echo "INFO: Clean dnf caches"
dnf clean all
rm -rf /var/cache/dnf

echo "INFO: Update all packages"
dnf -y update
echo "INFO: Clean dnf caches"
dnf clean all
rm -rf /var/cache/dnf

echo "INFO: Enable and restart chronyd"
systemctl enable chronyd.service
systemctl restart chronyd.service

echo "INFO: Set selinux to permissive"
sed -i 's/^SELINUX=.*$/SELINUX=disabled/g' /etc/selinux/config
setenforce 0

echo "INFO: Disable firewalld"
# Removed package in anaconda-ks
rpm --quiet -q firewalld && systemctl stop firewalld
rpm --quiet -q firewalld && systemctl disable firewalld
systemctl mask firewalld

echo "INFO: Install EPEL repository"
dnf -y install epel-release
dnf -y update epel-release
echo "INFO: Clean dnf caches"
dnf clean all
rm -rf /var/cache/dnf

echo "INFO: Install dnf plugins"
dnf -y install dnf-plugin-ovl
echo "INFO: Clean dnf caches"
dnf clean all
rm -rf /var/cache/dnf

echo "INFO: Make amount of installed kernels to two"
sed -r -i -e 's/^(\s*installonly_limit=).*/\12/g' /etc/dnf/dnf.conf

echo "INFO: Install OpenStack cloud packages"
dnf -y install --setopt=tsflags=nodocs cloud-init cloud-utils-growpart acpid
echo "INFO: Clean dnf caches"
dnf clean all
rm -rf /var/cache/dnf

echo "INFO: Install utility packages"
dnf -y install jq time strace tcpdump traceroute nmap nmap-ncat htop util-linux

echo "INFO: Disable cloud-init"
touch /etc/cloud/cloud-init.disabled

echo "INFO: Disable dnf updates for cloud-init and cloud-utils-growpart"
sed -i '/^exclude=/d' /etc/dnf/dnf.conf
sed -i 's/^\[main\]/[main]\nexclude=cloud-init cloud-utils-growpart/' /etc/dnf/dnf.conf

echo "INFO: Remove cloud-init default domainname localdomain"
sed -i -e 's/localdomain//g' /usr/lib/python3.6/site-packages/cloudinit/sources/__init__.py
rm -f /usr/lib/python3.6/site-packages/cloudinit/sources/__init__.py[co]

echo "INFO: Configure cloud-init. Add in cloud_init_modules section the module resolv-conf"
sed -i 's/^ - ssh/ - ssh\n - resolv-conf/' /etc/cloud/cloud.cfg

echo "INFO: Apply workaround for duplicate swap entry https://bugzilla.redhat.com/show_bug.cgi?id=1542578"
echo "" >> /etc/cloud/cloud.cfg
echo "# Workaround for duplicate swap entry https://bugzilla.redhat.com/show_bug.cgi?id=1542578" >> /etc/cloud/cloud.cfg
echo "mounts:" >> /etc/cloud/cloud.cfg
echo "    - [ /dev/mapper/cl-swap, null ]" >> /etc/cloud/cloud.cfg

echo "INFO: Enable and start acpid daemon"
systemctl enable acpid
systemctl start acpid

echo "INFO: Create interface eth0"
echo 'DEVICE=eth0
BOOTPROTO=dhcp
BOOTPROTOv6=dhcp
ONBOOT=yes
TYPE=Ethernet
USERCTL=yes
PEERDNS=yes
IPV6INIT=yes
PERSISTENT_DHCLIENT=1' > /etc/sysconfig/network-scripts/ifcfg-eth0

echo "INFO: Create interface eth1"
echo 'DEVICE=eth1
BOOTPROTO=dhcp
BOOTPROTOv6=dhcp
ONBOOT=yes
TYPE=Ethernet
USERCTL=yes
PEERDNS=yes
IPV6INIT=yes
PERSISTENT_DHCLIENT=1' > /etc/sysconfig/network-scripts/ifcfg-eth1

echo "INFO: Create interface eth2"
echo 'DEVICE=eth2
BOOTPROTO=dhcp
BOOTPROTOv6=dhcp
ONBOOT=yes
TYPE=Ethernet
USERCTL=yes
PEERDNS=yes
IPV6INIT=yes
PERSISTENT_DHCLIENT=1' > /etc/sysconfig/network-scripts/ifcfg-eth2

echo "INFO: Create interface eth3"
echo 'DEVICE=eth3
BOOTPROTO=dhcp
BOOTPROTOv6=dhcp
ONBOOT=yes
TYPE=Ethernet
USERCTL=yes
PEERDNS=yes
IPV6INIT=yes
PERSISTENT_DHCLIENT=1' > /etc/sysconfig/network-scripts/ifcfg-eth3

echo "INFO: Remove other existing net interfaces"
rm -f /etc/sysconfig/network-scripts/{ifcfg-enp0s3,ifcfg-enp0s8,ifcfg-enp0s9}

echo "INFO: Configure correctly the network"
echo 'NETWORKING=yes
NOZEROCONF=yes' > /etc/sysconfig/network

echo "INFO: Reload and restart NetworkManager"
systemctl reload NetworkManager
systemctl restart NetworkManager

# echo "INFO: Set locale keymap es-winkeys,us"
# echo 'KEYMAP=es-winkeys,us
# FONT=latarcyrheb-sun16
# ' > /etc/vconsole.conf
# echo 'LANG="en_US.UTF-8"
# ' > /etc/locale.conf
# localectl set-keymap es-winkeys,us
# localectl set-x11-keymap es-winkeys,us pc105
# localectl status

# echo "INFO: Set correctly the timezone with tzselect"
# continent or ocean 8) Europe
# country 43) Spain
# time zone regions 1) Spain (mainland)
# Is the above information OK? 1) Yes
# echo -e "8\n43\n1\n1\n" | tzselect
# BUG we cannot set timezones by ubication because change the local time incorrectly
# continent or ocean 11) none
# Please enter the desired value of the TZ environment variable GST+1
# Is the above information OK? 1) Yes
# echo -e "11\nGST+1\n1\n" | tzselect

# echo "INFO: Fix for timezone issues"
# rm -f /etc/adjtime
# hwclock --systohc

echo "INFO: Configure correctly grub2"
echo 'GRUB_TIMEOUT=1
GRUB_DISTRIBUTOR="$(sed '\''s, release .*$,,g'\'' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console serial"
GRUB_SERIAL_COMMAND="serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1"
GRUB_CMDLINE_LINUX="crashkernel=auto console=tty0 console=ttyS0,115200n8 vconsole.keymap=es net.ifnames=0 biosdevname=0 nofb nomodeset vga=791"
GRUB_DISABLE_RECOVERY=true
GRUB_ENABLE_BLSCFG=true
' > /etc/default/grub

echo "INFO: Save grub2 changes"
grub2-mkconfig -o /boot/grub2/grub.cfg

%end

